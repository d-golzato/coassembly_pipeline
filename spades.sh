#!/bin/bash
shopt -s nullglob

input_folder=$var1			#Directory containing tmp_reads (generated by step 1)
ncores=$var2                #Number of cores
mem=$var3                   #Memory used per assembly
e=$var4                     #Fastq extension
spades_preset=$var5         #Spades preset (default is for metagenomes)

coassembly_name=$(basename $input_folder)

#PATHS to tools
TOOLSFOLDER=/shares/CIBIO-Storage/CM/cmstore/tools
PYTHONFOLDER=/shares/CIBIO-Storage/CM/cmstore/tools/anaconda3/bin/
pspades="/shares/CIBIO-Storage/CM/cmstore/tools/spades-3.13.0/bin/spades.py"

#TMP_FOLDER
TMP_FOLDER=SERVER_TEMPFOLDER=/shares/CIBIO-Storage/CM/scratch/users/davide.golzato/tmp_scratch/

#COASSEMBLY FOLDER
coassembly_reads_folder=${input_folder}/tmp_reads/
coassembly_output_folder=${input_folder}/spades/

#Minimum requirements: 1) n R1 = n R2; 2) order of R1 = order of R2
R1=(${coassembly_reads_folder}/*_R1.${e})
R2=(${coassembly_reads_folder}/*_R2.${e})
UN=(${coassembly_reads_folder}/*_UN.${e})

if [[ "${R1[@]%.*}" == "${R2[@]%.*}" ]]; then echo -e "R1 and R2 not paired" ; exit 1 ; fi

R1=$(echo ${R1[@]});
R2=$(echo ${R2[@]});
UN=$(echo ${UN[@]});

logs="${input_folder}/logs"

de='.fastq'

mkdir -p ${coassembly_output_folder}

__conda_setup="$('/shares/CIBIO-Storage/CM/cmstore/tools/anaconda3/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/shares/CIBIO-Storage/CM/cmstore/tools/anaconda3/etc/profile.d/conda.sh" ]; then
        . "/shares/CIBIO-Storage/CM/cmstore/tools/anaconda3/etc/profile.d/conda.sh"
    else
        export PATH="/shares/CIBIO-Storage/CM/cmstore/tools/anaconda3/bin:$PATH"
    fi
fi

unset __conda_setup
conda deactivate
conda activate davide.golzato 


if [ ! -z "${R1}" ]; 
then if [ ! -z "${UN}"  ]; 
     then
        if [ ${e} == "fastq.bz2" ]; then
            bzcat ${R1} > ${coassembly_output_folder}/${coassembly_name}_R1${de}
            bzcat ${R2} > ${coassembly_output_folder}/${coassembly_name}_R2${de}
            bzcat ${UN} > ${coassembly_output_folder}/${coassembly_name}_UN${de}
            ${pspades} --pe1-1 ${coassembly_output_folder}/${coassembly_name}_R1${de} --pe1-2 ${coassembly_output_folder}/${coassembly_name}_R2${de} --pe1-s ${coassembly_output_folder}/${coassembly_name}_UN${de} -o ${coassembly_output_folder}/ -t ${ncores} ${spades_preset} -m ${mem} ${advanced}; 
            rm ${coassembly_output_folder}/${coassembly_name}_R1${de};
            rm ${coassembly_output_folder}/${coassembly_name}_R2${de};
            rm ${coassembly_output_folder}/${coassembly_name}_UN${de};
        else
            cat ${R1} > ${coassembly_output_folder}/${coassembly_name}_R1${de}
            cat ${R2} > ${coassembly_output_folder}/${coassembly_name}_R2${de}
            cat ${UN} > ${coassembly_output_folder}/${coassembly_name}_UN${de}
            ${pspades} --pe1-1 ${coassembly_output_folder}/${coassembly_name}_R1${de} --pe1-2 ${coassembly_output_folder}/${coassembly_name}_R2${de} --pe1-s ${coassembly_output_folder}/${coassembly_name}UN_${de} -o ${coassembly_output_folder}/ -t ${ncores} ${spades_preset} -m ${mem} ${advanced};
            rm ${coassembly_output_folder}/${coassembly_name}_R1${de};
            rm ${coassembly_output_folder}/${coassembly_name}_R2${de};
            rm ${coassembly_output_folder}/${coassembly_name}_UN${de};
        fi
     else 
        if [ ${e} == "fastq.bz2" ]; then
            bzcat ${R1} > ${coassembly_output_folder}/${coassembly_name}_R1${de}
            bzcat ${R2} > ${coassembly_output_folder}/${coassembly_name}_R2${de}
            ${pspades} --pe1-1 ${coassembly_output_folder}/${coassembly_name}_R1${de} --pe1-2 ${coassembly_output_folder}/${coassembly_name}_R2${de} -o ${coassembly_output_folder}/ -t ${ncores} ${spades_preset} -m ${mem} ${advanced}; 
            rm ${coassembly_output_folder}/${coassembly_name}_R1${de};
            rm ${coassembly_output_folder}/${coassembly_name}_R2${de};
        else
            cat ${R1} > ${coassembly_output_folder}/${coassembly_name}_R1${de}
            cat ${R2} > ${coassembly_output_folder}/${coassembly_name}_R2${de}
            ${pspades} --pe1-1 ${coassembly_output_folder}/${coassembly_name}_R1${de} --pe1-2 ${coassembly_output_folder}/${coassembly_name}_R2${de} -o ${coassembly_output_folder}/ -t ${ncores} ${spades_preset} -m ${mem} ${advanced};
            rm ${coassembly_output_folder}/${coassembly_name}_R1${de};
            rm ${coassembly_output_folder}/${coassembly_name}_R2${de};
        fi
     fi
else 
    if [ ${e} == ".fastq.bz2" ]; then
        bzcat ${UN} > ${coassembly_output_folder}/${coassembly_name}_UN${de}
        ${pspades} --s1 ${coassembly_output_folder}/${coassembly_name}_UN${de} -o ${coassembly_output_folder} -t ${ncores} ${spades_preset} -m ${mem} ;
        rm ${coassembly_output_folder}/${coassembly_name}_UN${de};
    else
        cat ${UN} > ${coassembly_output_folder}/${coassembly_name}_UN${de}
        ${pspades} --s1 ${coassembly_output_folder}/${coassembly_name}_UN${de} -o ${coassembly_output_folder} ${spades_preset} -m ${mem} ${advanced};
        rm ${coassembly_output_folder}/${coassembly_name}_UN${de};
    fi
fi

rm -rf ${coassembly_output_folder}/*_quast
rm -rf ${coassembly_output_folder}/K*
rm -rf ${coassembly_output_folder}/corrected
rm -rf ${coassembly_output_folder}/misc
rm -rf ${coassembly_output_folder}/tmp
rm -rf ${coassembly_output_folder}/configs
rm ${coassembly_output_folder}/assembly_graph*
rm ${coassembly_output_folder}/before_rr.fasta
rm ${coassembly_output_folder}/contigs.paths
rm ${coassembly_output_folder}/dataset.info
rm ${coassembly_output_folder}/first_pe_contigs.fasta
rm ${coassembly_output_folder}/input_dataset.yaml
rm ${coassembly_output_folder}/warnings.log
rm ${coassembly_output_folder}/spades.log
rm ${coassembly_output_folder}/scaffolds.paths
rm ${coassembly_output_folder}/params.txt 
mv ${coassembly_output_folder}/contigs.fasta ${coassembly_output_folder}/final.contigs.fa
